<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aurora博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-21T17:03:22.136Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Aurora</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Springboot动态定时任务</title>
    <link href="http://example.com/2021/08/21/Springboot%E5%8A%A8%E6%80%81%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://example.com/2021/08/21/Springboot%E5%8A%A8%E6%80%81%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</id>
    <published>2021-08-21T15:51:03.000Z</published>
    <updated>2021-08-21T17:03:22.136Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 项目上遇到用户动态调整定时任务执行时间的需求，一开始是使用数据库存储任务执行时间的方式，每次执行任务之前会从数据库中重新读取一次配置信息，从而更改下次执行时间。这样会有一个问题，比如任务是每天10:00执行，用户在11点更新下次执行时间，但实际第二天是未生效的，要在下一个执行周期才会生效，不符合需求。最后使用反射实现。</p></blockquote><h2 id="1-编写反射工具类"><a href="#1-编写反射工具类" class="headerlink" title="1.编写反射工具类"></a>1.编写反射工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanUtils</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title">findField</span><span class="params">(Class&lt;?&gt; clazz, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> clazz.getField(name);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">return</span> findDeclaredField(clazz, name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title">findDeclaredField</span><span class="params">(Class&lt;?&gt; clazz, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> clazz.getDeclaredField(name);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> findDeclaredField(clazz.getSuperclass(), name);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title">findMethod</span><span class="params">(Class&lt;?&gt; clazz, String methodName, Class&lt;?&gt;... paramTypes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> clazz.getMethod(methodName, paramTypes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">            <span class="keyword">return</span> findDeclaredMethod(clazz, methodName, paramTypes);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title">findDeclaredMethod</span><span class="params">(Class&lt;?&gt; clazz, String methodName, Class&lt;?&gt;... paramTypes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> clazz.getDeclaredMethod(methodName, paramTypes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> findDeclaredMethod(clazz.getSuperclass(), methodName, paramTypes);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getProperty</span><span class="params">(Object obj, String name)</span> <span class="keyword">throws</span> NoSuchFieldException </span>&#123;</span><br><span class="line">        Object value;</span><br><span class="line">        Field field = findField(obj.getClass(), name);</span><br><span class="line">        <span class="keyword">if</span> (field == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchFieldException(<span class="string">&quot;no such field [&quot;</span> + name + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> accessible = field.isAccessible();</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            value = field.get(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        field.setAccessible(accessible);</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setProperty</span><span class="params">(Object obj, String name, Object value)</span> <span class="keyword">throws</span> NoSuchFieldException </span>&#123;</span><br><span class="line">        Field field = findField(obj.getClass(), name);</span><br><span class="line">        <span class="keyword">if</span> (field == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchFieldException(<span class="string">&quot;no such field [&quot;</span> + name + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> accessible = field.isAccessible();</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field.set(obj, value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">        field.setAccessible(accessible);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">obj2Map</span><span class="params">(Object obj, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map == <span class="keyword">null</span>) &#123;</span><br><span class="line">            map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (obj != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class&lt;?&gt; clazz = obj.getClass();</span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">                    <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">                        <span class="keyword">int</span> mod = field.getModifiers();</span><br><span class="line">                        <span class="keyword">if</span> (Modifier.isStatic(mod)) &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">boolean</span> accessible = field.isAccessible();</span><br><span class="line">                        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                        map.put(field.getName(), field.get(obj));</span><br><span class="line">                        field.setAccessible(accessible);</span><br><span class="line">                    &#125;</span><br><span class="line">                    clazz = clazz.getSuperclass();</span><br><span class="line">                &#125; <span class="keyword">while</span> (clazz != <span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得父类集合，包含当前class</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Class&lt;?&gt;&gt; getSuperclassList(Class&lt;?&gt; clazz) &#123;</span><br><span class="line">        List&lt;Class&lt;?&gt;&gt; clazzes = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">3</span>);</span><br><span class="line">        clazzes.add(clazz);</span><br><span class="line">        clazz = clazz.getSuperclass();</span><br><span class="line">        <span class="keyword">while</span> (clazz != <span class="keyword">null</span>) &#123;</span><br><span class="line">            clazzes.add(clazz);</span><br><span class="line">            clazz = clazz.getSuperclass();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Collections.unmodifiableList(clazzes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-定时任务配置类"><a href="#2-定时任务配置类" class="headerlink" title="2.定时任务配置类"></a>2.定时任务配置类</h2><blockquote><p>通过反射在程序运行时获取到定时任务对象，对其进行添加、删除、重置任务等操作。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompleteScheduleConfig</span> <span class="keyword">implements</span> <span class="title">SchedulingConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ScheduledTaskRegistrar taskRegistrar;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;ScheduledFuture&lt;?&gt;&gt; scheduledFutures = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, ScheduledFuture&lt;?&gt;&gt; taskFutures = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureTasks</span><span class="params">(ScheduledTaskRegistrar taskRegistrar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.taskRegistrar = taskRegistrar;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;ScheduledFuture&lt;?&gt;&gt; getScheduledFutures() &#123;</span><br><span class="line">        <span class="keyword">if</span> (scheduledFutures == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// spring版本不同选用不同字段scheduledFutures</span></span><br><span class="line">                scheduledFutures = (Set&lt;ScheduledFuture&lt;?&gt;&gt;) BeanUtils.getProperty(taskRegistrar, <span class="string">&quot;scheduledTasks&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> SchedulingException(<span class="string">&quot;not found scheduledFutures field.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> scheduledFutures;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTriggerTask</span><span class="params">(String taskId, TriggerTask triggerTask)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (taskFutures.containsKey(taskId)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SchedulingException(<span class="string">&quot;the taskId[&quot;</span> + taskId + <span class="string">&quot;] was added.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        TaskScheduler scheduler = taskRegistrar.getScheduler();</span><br><span class="line">        ScheduledFuture&lt;?&gt; future = scheduler.schedule(triggerTask.getRunnable(), triggerTask.getTrigger());</span><br><span class="line">        getScheduledFutures().add(future);</span><br><span class="line">        taskFutures.put(taskId, future);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelTriggerTask</span><span class="params">(String taskId)</span> </span>&#123;</span><br><span class="line">        ScheduledFuture&lt;?&gt; future = taskFutures.get(taskId);</span><br><span class="line">        <span class="keyword">if</span> (future != <span class="keyword">null</span>) &#123;</span><br><span class="line">            future.cancel(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        taskFutures.remove(taskId);</span><br><span class="line">        getScheduledFutures().remove(future);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重置任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resetTriggerTask</span><span class="params">(String taskId, TriggerTask triggerTask)</span> </span>&#123;</span><br><span class="line">        cancelTriggerTask(taskId);</span><br><span class="line">        addTriggerTask(taskId, triggerTask);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 任务编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">taskIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> taskFutures.keySet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否存在任务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasTask</span><span class="params">(String taskId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.taskFutures.containsKey(taskId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 任务调度是否已经初始化完成</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">inited</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.taskRegistrar != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.taskRegistrar.getScheduler() != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-转换时间日期为cron表达式工具类"><a href="#3-转换时间日期为cron表达式工具类" class="headerlink" title="3.转换时间日期为cron表达式工具类"></a>3.转换时间日期为cron表达式工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CronUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     *  功能描述：日期转换cron表达式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDateByPattern</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;ss mm HH dd MM ?&quot;</span>);</span><br><span class="line">        String formatTimeStr = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (Objects.nonNull(date)) &#123;</span><br><span class="line">            formatTimeStr = sdf.format(date);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> formatTimeStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatTimeByPattern</span><span class="params">(Time time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;ss mm HH * * ?&quot;</span>);</span><br><span class="line">        String formatTimeStr = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (Objects.nonNull(time)) &#123;</span><br><span class="line">            formatTimeStr = sdf.format(time);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> formatTimeStr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-初始化定时任务"><a href="#4-初始化定时任务" class="headerlink" title="4.初始化定时任务"></a>4.初始化定时任务</h2><blockquote><p>因为程序的定时任务信息是从数据库中获取的，所以我们要在springboot容器创建完成之后对定时任务进行初始化操作。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextRefreshedListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ContextRefreshedEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CompleteScheduleConfig completeScheduleConfig;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AlarmService alarmService;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AlarmConfMapper alarmConfMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ContextRefreshedListener</span><span class="params">(AlarmService alarmService, AlarmConfMapper alarmConfMapper, CompleteScheduleConfig completeScheduleConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.alarmService = alarmService;</span><br><span class="line">        <span class="keyword">this</span>.alarmConfMapper = alarmConfMapper;</span><br><span class="line">        <span class="keyword">this</span>.completeScheduleConfig = completeScheduleConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ContextRefreshedEvent event)</span> </span>&#123;</span><br><span class="line">        log.debug(<span class="string">&quot;初始化定时任务&quot;</span>);</span><br><span class="line">        Time time = alarmConfMapper.queryEmployeeCheckTime();</span><br><span class="line">        <span class="keyword">if</span> (ObjectUtils.isNotEmpty(time)) &#123;</span><br><span class="line">            completeScheduleConfig.addTriggerTask(<span class="string">&quot;employeeCountAlarm&quot;</span>, <span class="keyword">new</span> TriggerTask(</span><br><span class="line">                    alarmService::employeeCountAlarm,</span><br><span class="line">                    <span class="keyword">new</span> CronTrigger(CronUtils.formatTimeByPattern(time))));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-重置定时任务时间"><a href="#5-重置定时任务时间" class="headerlink" title="5.重置定时任务时间"></a>5.重置定时任务时间</h2><blockquote><p>接收到用户更新的任务执行时间之后，对当前任务进行重置。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/conf/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseResponse&lt;String&gt; <span class="title">updateAlarmConf</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, <span class="meta">@RequestBody</span> AlarmConfDto alarmConfDto)</span> </span>&#123;</span><br><span class="line">        Boolean success = alarmService.updateAlarmConf(id, alarmConfDto);</span><br><span class="line">        <span class="keyword">if</span> (success) &#123;</span><br><span class="line">            Time time = alarmConfMapper.queryEmployeeCheckTime();</span><br><span class="line">            <span class="keyword">if</span> (ObjectUtils.isNotEmpty(time)) &#123;</span><br><span class="line">                completeScheduleConfig.resetTriggerTask(<span class="string">&quot;employeeCountAlarm&quot;</span>, <span class="keyword">new</span> TriggerTask(</span><br><span class="line">                        alarmService::employeeCountAlarm,</span><br><span class="line">                        <span class="keyword">new</span> CronTrigger(CronUtils.formatTimeByPattern(time))));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                completeScheduleConfig.cancelTriggerTask(<span class="string">&quot;employeeCountAlarm&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> BaseResponse.ok(<span class="string">&quot;告警规则修改成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> BaseResponse.ok(<span class="string">&quot;告警规则修改失败&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt; 项目上遇到用户动态调整定时任务执行时间的需求，一开始是使用数据库存储任务执行时间的方式，每次执行任务之前会从数据库中重新读取一次配置信息，从而更改下次执行时间。这样会有一个问题，比如任务是每天10:00执行，用户在11点更新下次执行时间，但实际第</summary>
      
    
    
    
    <category term="springboot" scheme="http://example.com/categories/springboot/"/>
    
    
    <category term="动态定时任务" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Docker+keepalived+nginx搭建高可用集群</title>
    <link href="http://example.com/2021/08/05/Docker-keepalived-nginx%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/"/>
    <id>http://example.com/2021/08/05/Docker-keepalived-nginx%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</id>
    <published>2021-08-04T16:30:30.000Z</published>
    <updated>2021-08-21T17:03:02.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Docker环境来模拟多服务器环境"><a href="#1-Docker环境来模拟多服务器环境" class="headerlink" title="1.Docker环境来模拟多服务器环境"></a>1.Docker环境来模拟多服务器环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name web1 --privileged=true centos /usr/sbin/init</span><br><span class="line">docker exec -it web1 /bin/bash</span><br><span class="line">docker run -d --name web2 --privileged=true centos /usr/sbin/init</span><br><span class="line">docker exec -it web2 /bin/bash</span><br><span class="line">docker run -d --name webtest --privileged=true centos /usr/sbin/init</span><br><span class="line">docker exec -it webtest /bin/bash</span><br></pre></td></tr></table></figure><ul><li>–privileged=true：可以docker内真正拥有root权限</li><li>/usr/sbin/init：可以在docker内使用systemctl命令</li></ul><h2 id="2-安装nginx、keepalived、vim、net-tools、initscripts"><a href="#2-安装nginx、keepalived、vim、net-tools、initscripts" class="headerlink" title="2.安装nginx、keepalived、vim、net-tools、initscripts"></a>2.安装nginx、keepalived、vim、net-tools、initscripts</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx keepalived vim net-tools initscripts</span><br></pre></td></tr></table></figure><ul><li>initscripts：可以使用service命令</li></ul><h2 id="3-修改nginx默认html页面（方便查看主备切换）"><a href="#3-修改nginx默认html页面（方便查看主备切换）" class="headerlink" title="3.修改nginx默认html页面（方便查看主备切换）"></a>3.修改nginx默认html页面（方便查看主备切换）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/nginx/html</span><br><span class="line">vim index.html</span><br></pre></td></tr></table></figure><p><img src="/../../images/1269262184-c2b126fd67ce895d_fix732-8097399.png" alt="1269262184-c2b126fd67ce895d_fix732"></p><p><img src="/../../images/825873155-98546f3f4735f425_fix732-8097416.png" alt="825873155-98546f3f4735f425_fix732"></p><h2 id="4-创建nginx进程检测脚本"><a href="#4-创建nginx进程检测脚本" class="headerlink" title="4.创建nginx进程检测脚本"></a>4.创建nginx进程检测脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/keepalived</span><br><span class="line">touch check_nginx.sh</span><br><span class="line">chmod +x check_nginx.sh</span><br><span class="line">vim check_nginx.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">A=`ps -C nginx --no-header | wc -l`</span><br><span class="line">if [ $A -eq 0 ];then</span><br><span class="line">    /usr/sbin/nginx</span><br><span class="line">    sleep 2</span><br><span class="line">    if [ `ps -C nginx --no-header | wc -l` -eq 0 ];then</span><br><span class="line">        killall keepalived</span><br><span class="line">    fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="5-配置keepalived"><a href="#5-配置keepalived" class="headerlink" title="5.配置keepalived"></a>5.配置keepalived</h2><blockquote><p>master节点配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL  #节点名，一般使用默认的就可以</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_nginx &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check_nginx.sh&quot; #检测nginx脚本的路径</span><br><span class="line">    interval 2  #运行脚本的间隔时间</span><br><span class="line">    weight -20  #变更的权重</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER  #此节点为MASTER，如果此节点down掉，再重启时，会立即抢占回主节点</span><br><span class="line">    #mcast_src_ip 172.17.0.2  本机ip，不声明则默认绑定本机ip</span><br><span class="line">    interface eth0  #绑定的网卡，可以通过ifconfig查看网卡信息</span><br><span class="line">    virtual_router_id 70  #虚拟路由标识，同一组的必须相同</span><br><span class="line">    priority 100  #权重</span><br><span class="line">    nopreempt  #定义为非抢占式，因为多次主备切换对请求量大的服务器不太好</span><br><span class="line">    advert_int 1  #与组内其他节点发送心跳的间隔：s</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.17.0.200</span><br><span class="line">    &#125;  #绑定的虚拟ip组</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_nginx</span><br><span class="line">    &#125;  #执行前面声明的脚本</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>backup节点配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL  #节点名，一般使用默认的就可以</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_nginx &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check_nginx.sh&quot; #检测nginx脚本的路径</span><br><span class="line">    interval 2  #运行脚本的间隔时间</span><br><span class="line">    weight -20  #变更的权重</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  #此节点为backup</span><br><span class="line">    # mcast_src_ip 172.17.0.3  本机ip，不声明则默认绑定本机ip</span><br><span class="line">    interface eth0  #绑定的网卡，可以通过ifconfig查看网卡信息</span><br><span class="line">    virtual_router_id 70  #虚拟路由标识，同一组的必须相同</span><br><span class="line">    priority 90  #权重，备节点的权重要比主节点小</span><br><span class="line">    advert_int 1  #与组内其他节点发送心跳的间隔：s。组内间隔必须相同</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.17.0.200</span><br><span class="line">    &#125;  #绑定的虚拟ip组</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_nginx</span><br><span class="line">    &#125;  #执行前面声明的脚本</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h2><blockquote><p>启动web1、web2内的nginx及keepalived服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br><span class="line">systemctl start keepalived</span><br></pre></td></tr></table></figure><blockquote><p>查看虚拟ip是否绑定在master节点</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><p><img src="/../../images/2072617212-fbf4b38345f1e8fd_fix732-8097504.png" alt="2072617212-fbf4b38345f1e8fd_fix732"></p><blockquote><p>使用webtest容器作为客户端访问nginx服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 172.17.0.200</span><br></pre></td></tr></table></figure><p><img src="/../../images/2228696458-5310ccd351c591da_fix732-8097527.png" alt="2228696458-5310ccd351c591da_fix732"></p><blockquote><p>停止web1容器，模拟宕机。再次访问nginx服务，成功迁移到backup节点</p></blockquote><p><img src="/../../images/103544577-7bfbcef4d16225dc_fix732-8097540.png" alt="103544577-7bfbcef4d16225dc_fix732"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Docker环境来模拟多服务器环境&quot;&gt;&lt;a href=&quot;#1-Docker环境来模拟多服务器环境&quot; class=&quot;headerlink&quot; title=&quot;1.Docker环境来模拟多服务器环境&quot;&gt;&lt;/a&gt;1.Docker环境来模拟多服务器环境&lt;/h2&gt;&lt;figu</summary>
      
    
    
    
    <category term="HA" scheme="http://example.com/categories/HA/"/>
    
    
    <category term="高可用" scheme="http://example.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
  </entry>
  
</feed>
