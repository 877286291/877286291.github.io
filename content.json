{"meta":{"title":"Aurora博客","subtitle":"","description":"","author":"Aurora","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2021-08-05T02:24:22.805Z","updated":"2021-08-05T02:24:22.805Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"书单","date":"2021-08-05T02:24:22.805Z","updated":"2021-08-05T02:24:22.804Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-08-05T02:24:22.804Z","updated":"2021-08-05T02:24:22.804Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2021-08-05T02:24:22.805Z","updated":"2021-08-05T02:24:22.805Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"404 Not Found：该页无法显示","date":"2021-08-05T02:24:22.802Z","updated":"2021-08-05T02:24:22.802Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"标签","date":"2021-08-05T02:24:22.807Z","updated":"2021-08-05T02:24:22.807Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2021-08-05T02:24:22.806Z","updated":"2021-08-05T02:24:22.806Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"Docker+keepalived+nginx搭建高可用集群","slug":"Docker-keepalived-nginx搭建高可用集群","date":"2021-08-04T16:30:30.000Z","updated":"2021-08-04T17:19:03.820Z","comments":true,"path":"2021/08/05/Docker-keepalived-nginx搭建高可用集群/","link":"","permalink":"http://example.com/2021/08/05/Docker-keepalived-nginx%E6%90%AD%E5%BB%BA%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/","excerpt":"","text":"1.Docker环境来模拟多服务器环境123456docker run -d --name web1 --privileged=true centos /usr/sbin/initdocker exec -it web1 /bin/bashdocker run -d --name web2 --privileged=true centos /usr/sbin/initdocker exec -it web2 /bin/bashdocker run -d --name webtest --privileged=true centos /usr/sbin/initdocker exec -it webtest /bin/bash –privileged=true：可以docker内真正拥有root权限 /usr/sbin/init：可以在docker内使用systemctl命令 2.安装nginx、keepalived、vim、net-tools、initscripts1yum install -y nginx keepalived vim net-tools initscripts initscripts：可以使用service命令 3.修改nginx默认html页面（方便查看主备切换）12cd /usr/share/nginx/htmlvim index.html 4.创建nginx进程检测脚本1234cd /etc/keepalivedtouch check_nginx.shchmod +x check_nginx.shvim check_nginx.sh 123456789#!/bin/bashA=`ps -C nginx --no-header | wc -l`if [ $A -eq 0 ];then /usr/sbin/nginx sleep 2 if [ `ps -C nginx --no-header | wc -l` -eq 0 ];then killall keepalived fifi 5.配置keepalived master节点配置 12345678910111213141516171819202122232425global_defs &#123; router_id LVS_DEVEL #节点名，一般使用默认的就可以&#125;vrrp_script chk_nginx &#123; script &quot;/etc/keepalived/check_nginx.sh&quot; #检测nginx脚本的路径 interval 2 #运行脚本的间隔时间 weight -20 #变更的权重&#125;vrrp_instance VI_1 &#123; state MASTER #此节点为MASTER，如果此节点down掉，再重启时，会立即抢占回主节点 #mcast_src_ip 172.17.0.2 本机ip，不声明则默认绑定本机ip interface eth0 #绑定的网卡，可以通过ifconfig查看网卡信息 virtual_router_id 70 #虚拟路由标识，同一组的必须相同 priority 100 #权重 nopreempt #定义为非抢占式，因为多次主备切换对请求量大的服务器不太好 advert_int 1 #与组内其他节点发送心跳的间隔：s virtual_ipaddress &#123; 172.17.0.200 &#125; #绑定的虚拟ip组 track_script &#123; chk_nginx &#125; #执行前面声明的脚本&#125; backup节点配置 123456789101112131415161718192021222324global_defs &#123; router_id LVS_DEVEL #节点名，一般使用默认的就可以&#125;vrrp_script chk_nginx &#123; script &quot;/etc/keepalived/check_nginx.sh&quot; #检测nginx脚本的路径 interval 2 #运行脚本的间隔时间 weight -20 #变更的权重&#125;vrrp_instance VI_1 &#123; state BACKUP #此节点为backup # mcast_src_ip 172.17.0.3 本机ip，不声明则默认绑定本机ip interface eth0 #绑定的网卡，可以通过ifconfig查看网卡信息 virtual_router_id 70 #虚拟路由标识，同一组的必须相同 priority 90 #权重，备节点的权重要比主节点小 advert_int 1 #与组内其他节点发送心跳的间隔：s。组内间隔必须相同 virtual_ipaddress &#123; 172.17.0.200 &#125; #绑定的虚拟ip组 track_script &#123; chk_nginx &#125; #执行前面声明的脚本&#125; 6.测试 启动web1、web2内的nginx及keepalived服务 12nginxsystemctl start keepalived 查看虚拟ip是否绑定在master节点 1ip a 使用webtest容器作为客户端访问nginx服务 1curl 172.17.0.200 停止web1容器，模拟宕机。再次访问nginx服务，成功迁移到backup节点","categories":[],"tags":[]}],"categories":[],"tags":[]}